{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport rootSaga from './saga';\n\nconst bindMiddleware = middleware => {\n  if (false) {\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nexport const makeStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":null,"metadata":{},"sourceType":"module"}